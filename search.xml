<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>初学RSA</title>
      <link href="2021/020461303.html"/>
      <url>2021/020461303.html</url>
      
        <content type="html"><![CDATA[<p>笔记写在word上太难看了：）<br>主要用来ctf解题<br>个人概括起RSA来说就是：每个人都有公钥e，可以根据公钥e加密信息，但只有持有私钥d的我才能对信息进行解密。</p><h3 id="1互质关系"><a href="#1互质关系" class="headerlink" title="1互质关系"></a>1<em>互质关系</em></h3><p>  两个正整数除1以外没有公因子  （所以不仅仅是两个质数可以构成互质关系） </p><h3 id="2-python中gmpy2库的使用"><a href="#2-python中gmpy2库的使用" class="headerlink" title="2 python中gmpy2库的使用"></a>2 <em>python中gmpy2库的使用</em></h3><p>①gmpy2.mpz(n)………………..初始化一个大整数<br>②gmpy2.mpfr(x)………………..初始化一个高精度浮点数x<br>③gmpy2.iroot(x,n)……………..x开n次根<br>④c = gmpy2.powmod(m,e,n).幂取模，结果是 c = (m^e) mod n<br>⑤gmpy2.is_prime(n)………….素性检测<br>⑥gmpy2.gcd(a,b)………………欧几里得算法，最大公约数<br>⑦gmpy2.gcdext(a,b)………….扩展欧几里得算法<br>⑧gmpy2.next_prime(p)…………顾名思义<br>⑨d = gmpy2.invert(e,n)………求大整数e模n的逆元d，invert（e，n）返回d使得e * d == 1 mod n</p><h3 id="3-基础解题"><a href="#3-基础解题" class="headerlink" title="3 基础解题"></a>3 <em>基础解题</em></h3><p>①一般给出两个素数p,q(若给出的是n，可以去<a href="http://www.factordb.com/index.php">在线分解大整数</a> )  </p><p>②计算公共模数 n<br> <code>n = p * q</code>  </p><p>③欧拉函数φ(n)<br><code>φ(n) = （p-1）*（q-1）</code> </p><p>④公钥e<br><code>1 &lt; e &lt; φ(n)</code>  </p><p>⑤私钥d<br><code>(d * e) mod φ(n) = 1</code><br><code>d * e ≡ 1 mod ((p-1) * (q-1))</code><br>≡的意思:a ≡ b mod c 等价于 b = a mod c<br>可用RSA-Tool2 by tE工具根据p,q,e解出(使用工具时e要进行<a href="https://tool.oschina.net/hexconvert">10进制到16进制的转化</a>)  </p><p>⑥加密：密文c<br><code>c = (m^e) mod n</code>  </p><p>⑦解密：明文m<br><code>m = (c^d) mod n</code>    </p><p> 若题目说了格式为flag{}则直接上交<br>若未说，则转换成字符串的脚本如下：  </p><pre name="code" class="python"><font color="brown">import gmpy2  import binascii  e =  p =   q =   c =   n = p*q  phi = (p-1) * (q-1)  d = gmpy2.invert(e,phi)  m = gmpy2.powmod(c,d,n)  print(binascii.unhexlify(hex(m)[2:]))</font></pre>  <h3 id="4进阶解题"><a href="#4进阶解题" class="headerlink" title="4进阶解题"></a>4<em>进阶解题</em></h3><p>①私钥d<br><code>d = gmpy2.invert(e,phi) </code> </p><p>②（未）给出dp，dq<br><code>dp ≡ d mod (p-1) </code><br><code>dq ≡ d mod (q-1) </code> </p><p>③计算mp,mq,I  </p><pre name="code" class="python"><font color="brown">mp = (c^dp) mod pmq = (c^dq) mod q  I = gmpy2.invert(q,p)   </font></pre><p>④ 明文m<br><code>m = (((mp-mq)*I)%p)q + mq</code></p><h3 id="5-已知e-n1-n2-c1-c2"><a href="#5-已知e-n1-n2-c1-c2" class="headerlink" title="5 已知e,n1,n2,c1,c2"></a>5 <em>已知e,n1,n2,c1,c2</em></h3><p>①求出n1和n2的最大公约数p<br> <code>p = gmpy2.gcd(n1,n2)</code><br>②计算q<br> <code>q = n1//p</code> (不必考虑q1,q2的情况，最后解出的字符串都一样)<br>③计算phi,d,m  </p><pre name="code" class="python"><font color="brown">phi = （p-1）*（q-1)d = gmpy2.invert(e,phi)    m = gmpy2.powmod(c1,d,n1) </font></pre><p>④代码</p><pre name="code" class="python"><font color="brown">import gmpy2  import binascii  e =  n1 =  c1 =  n2 =   c2 =   p = gmpy2.gcd(n1,n2)  q = n1 // p  phi = (p-1) * (q-1)  d = gmpy2.invert(e,phi)  m = gmpy2.powmod(c1,d,n1)  print(binascii.unhexlify(hex(m)[2:]))  </font></pre><h3 id="6-已知n-e1-e2-c1-c2-共模攻击"><a href="#6-已知n-e1-e2-c1-c2-共模攻击" class="headerlink" title="6 已知n,e1,e2,c1,c2 共模攻击"></a>6 <em>已知n,e1,e2,c1,c2 共模攻击</em></h3><p>直接给代码了：</p><pre name="code" class="python"><font color="brown">import gmpy2  import binascii  n =  e1 =  c1 =   e2 =  c2 =  s = gmpy2.gcdext(e1,e2)  m1 = gmpy2.powmod(c1,s[1],n)  m2 = gmpy2.powmod(c2,s[2],n)  m = (m1*m2)%n  print(binascii.unhexlify(hex(m)[2:]))  </font></pre><h3 id="7-低加密指数e攻击（e相对n来说很小）"><a href="#7-低加密指数e攻击（e相对n来说很小）" class="headerlink" title="7 低加密指数e攻击（e相对n来说很小）"></a>7 <em>低加密指数e攻击（e相对n来说很小）</em></h3><p>常用于e = 3 的情况<br>①m^3 &lt; n<br> c = m^3<br>②m^3 &gt; n<br> c = (m^3) - i * n<br> 即找到i,使得c+i * n可开三次方  </p><pre name="code" class="python"><font color="brown">import gmpy2       import binascii  e =    n =     c =      i = 0    while True:       if gmpy2.iroot((c+i*n),3)[1] == True:              m = gmpy2.iroot((c+i*n),3)[0]             break     i += 1     print(binascii.unhexlify(hex(m)[2:]))    </font></pre><h3 id="8-低解密指数攻击（e很大）"><a href="#8-低解密指数攻击（e很大）" class="headerlink" title="8 低解密指数攻击（e很大）"></a>8 <em>低解密指数攻击（e很大）</em></h3><p>用<a href="https://codechina.csdn.net/mirrors/pablocelayes/rsa-wiener-attack?utm_source=csdn_github_accelerator">RSAwienerHacker破解d</a>后再在文件夹中新建py文件<br>代码：  </p><pre name="code" class="python"><font color="brown">import gmpy2  import binascii  import RSAwienerHacker  e =   n =  c =  d = RSAwienerHacker.hack_RSA(e,n)  m = gmpy2.powmod(c,d,n)  print(binascii.unhexlify(hex(m)[2:]))  </font></pre><h3 id="9-p-q相差极大或极小"><a href="#9-p-q相差极大或极小" class="headerlink" title="9 p,q相差极大或极小"></a>9 <em>p,q相差极大或极小</em></h3><p>使用yafu.exe  分解n<br>命令为 <code>factor（n）</code>  结果在factor.log中查看</p><h3 id="10-低加密指数广播攻击"><a href="#10-低加密指数广播攻击" class="headerlink" title="10 低加密指数广播攻击"></a>10 <em>低加密指数广播攻击</em></h3><p>当e比较小，且使用了相同的e给若干个接收者发送相同的信息，有以下等式成立：    </p><pre name="code" class="python"><font color="brown">c1 = pow(m, e, n1)  c2 = pow(m, e, n2)  c3 = pow(m, e, n3)</font></pre><p>对上述等式运用中国剩余定理，在e=3时，可以得到：<br><code>c _ x = pow(m, 3, n1 * n2 * n3)</code><br>通过对 c_x进行三次开方可以得到明文  </p><h3 id="11-buuctf做题记录RSA2-dp泄露"><a href="#11-buuctf做题记录RSA2-dp泄露" class="headerlink" title="11 buuctf做题记录RSA2(dp泄露)"></a>11 <em>buuctf做题记录RSA2(dp泄露)</em></h3><p>题目：  已知e,n,dp,c<br>解：<br>我还不会</p><h3 id="12-e-1或e-2时"><a href="#12-e-1或e-2时" class="headerlink" title="12 e=1或e=2时"></a>12 <em>e=1或e=2时</em></h3><p>参考<a href="https://blog.csdn.net/huanghelouzi/article/details/82974741">CTF中RSA常用攻击方法真题及脚本汇总</a></p><h3 id="13-e-为偶数-与phi不互素"><a href="#13-e-为偶数-与phi不互素" class="headerlink" title="13 e(为偶数)与phi不互素"></a>13 <em>e(为偶数)与phi不互素</em></h3><p>①选取e’=e/gcd(e,phi) (gcd指的是最大公因子)</p><p>②加密指数选择d=invert(e’,phi)</p><p>③解密过程可写为c^d=m^gcd(e,phi)mod(n) </p><h3 id="14-还在补充"><a href="#14-还在补充" class="headerlink" title="14 还在补充"></a>14 <em>还在补充</em></h3>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python学习杂谈</title>
      <link href="2021/020364441.html"/>
      <url>2021/020364441.html</url>
      
        <content type="html"><![CDATA[<p>还没开始学：）</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>备忘录</title>
      <link href="2021/020320870.html"/>
      <url>2021/020320870.html</url>
      
        <content type="html"><![CDATA[<h2 id="blog相关"><a href="#blog相关" class="headerlink" title="blog相关"></a>blog相关</h2><h3 id="1-图片封面"><a href="#1-图片封面" class="headerlink" title="-1-图片封面"></a>-1-<em>图片封面</em></h3><p>  应存放在Blog/source/images</p><h3 id="2-首页subtitle"><a href="#2-首页subtitle" class="headerlink" title="-2-首页subtitle"></a>-2-<em>首页subtitle</em></h3><p>  应修改Blog/_config.yml里的subtitle</p><h3 id="3-新页面的创建"><a href="#3-新页面的创建" class="headerlink" title="-3-新页面的创建"></a>-3-<em>新页面的创建</em></h3><p>  hexo new “xx”</p><h3 id="4-还应学习"><a href="#4-还应学习" class="headerlink" title="-4-还应学习"></a>-4-<em>还应学习</em></h3><p>  md插入图片，优化网站访问速度，创建图床</p><p>More info: <a href="https://codechina.csdn.net/mirrors/blinkfox/hexo-theme-matery/-/blob/develop/README_CN.md">details</a></p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> memory </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>secret</title>
      <link href="2021/02039170.html"/>
      <url>2021/02039170.html</url>
      
        <content type="html"><![CDATA[<p>好想你a</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ❤ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sample</title>
      <link href="2021/020216107.html"/>
      <url>2021/020216107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code>$ hexo new "My New Post"</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code>$ hexo s</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code>$ hexo g</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code>$ hexo d</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sample </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
